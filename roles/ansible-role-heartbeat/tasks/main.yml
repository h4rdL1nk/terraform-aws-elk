---

- name: Create heartbeat directories
  file:
    state: directory
    path: "{{ item }}"
    recurse: True
  with_items:
    - "{{ heartbeat_config_dir }}"
    - "{{ heartbeat_data_dir }}"
  tags:
    - configuration
    - files

- name: Copy SSL certificates
  copy:
    src: "{{ elasticsearch_certificate_local_dir|default('files/elasticsearch/certificates')}}/{{ item }}"
    dest: "{{ heartbeat_config_dir }}/{{ item }}"
  with_items:
    - "{{ elasticsearch_certificate_ca_file_ingest }}"
    - "{{ elasticsearch_certificate_ca_file_monitoring }}"
  tags:
    - configuration
    - files
    - certificates

- name: Load heartbeat secrets
  include_vars:
    file: "{{ lookup('env', 'PWD') }}/{{ heartbeat_secrets_file|default('vault/secrets.yml')}}"
  tags:
    - configuration

- name: Get elasticsearch cluster UUID
  uri: 
    method: GET
    url_username: elastic
    url_password: "{{ secrets.elasticsearch.users.elastic }}"
    url: "{% if elasticsearch_security_http_enabled %}https{% else %}http{% endif %}://{{ elasticsearch_cluster_network_addresses[0] }}:{{ elasticsearch_network_port }}"
    remote_src: True
    return_content: True
    validate_certs: False
    force_basic_auth: True
  when: heartbeat_set_cluster_uuid
  register: cluster_uuid
  
- name: Set cluster UUID variable
  set_fact:
    heartbeat_cluster_uuid: "{{ cluster_uuid.json.cluster_uuid }}"
  when: heartbeat_set_cluster_uuid

- name: Copy heartbeat configuration
  template:
    src: heartbeat.j2
    dest: "{{ heartbeat_config_dir }}/heartbeat.yml"
  register: heartbeat_config
  tags:
    - configuration
    - files

- name: Create heartbeat keystore
  command: "docker run --rm -i -v {{ heartbeat_data_dir }}:/usr/share/heartbeat/data:rw,Z --user root {{ heartbeat_docker_image }}:{{ heartbeat_docker_tag }} keystore create"
  args:
    creates: "{{ heartbeat_data_dir }}/heartbeat.keystore"
  register: keystore_create
  tags:
    - configuration
    - files
    - keystore

- name: Add heartbeat keystore keys
  command: "docker run --rm -i -v {{ heartbeat_data_dir }}:/usr/share/heartbeat/data:rw,Z --user root {{ heartbeat_docker_image }}:{{ heartbeat_docker_tag }} keystore add {{ item.key }} --stdin --force"
  args:
    stdin: "{{ item.value }}"
  with_dict: "{{ secrets.heartbeat }}"
  when: keystore_create.changed or heartbeat_force_keystore_write
  register: keystore_write
  tags:
    - configuration
    - files
    - keystore

- name: Create heartbeat template 
  command: "docker run --rm -i -v {{ heartbeat_data_dir }}:/usr/share/heartbeat/data:rw,Z -v {{ heartbeat_config_dir }}/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro,Z -v {{ heartbeat_config_dir }}/{{ elasticsearch_certificate_ca_file_ingest }}:/usr/share/heartbeat/{{ elasticsearch_certificate_ca_file_ingest }}:ro,Z --user root {{ heartbeat_docker_image }}:{{ heartbeat_docker_tag }} setup -E output.logstash.enabled=false -E output.elasticsearch.enabled=true -E output.elasticsearch.protocol=https -E output.elasticsearch.username=elastic -E output.elasticsearch.password={{ secrets.elasticsearch.users.elastic }} --template"
  run_once: True 
  ignore_errors: True 
  when: heartbeat_setup_template and not heartbeat_output_elasticsearch
  tags:
    - configuration
    - setup
    - template

- name: Create heartbeat ilm policy 
  command: "docker run --rm -i -v {{ heartbeat_data_dir }}:/usr/share/heartbeat/data:rw,Z -v {{ heartbeat_config_dir }}/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro,Z -v {{ heartbeat_config_dir }}/{{ elasticsearch_certificate_ca_file_ingest }}:/usr/share/heartbeat/{{ elasticsearch_certificate_ca_file_ingest }}:ro,Z --user root {{ heartbeat_docker_image }}:{{ heartbeat_docker_tag }} setup -E output.logstash.enabled=false -E output.elasticsearch.enabled=true -E output.elasticsearch.protocol=https -E output.elasticsearch.username=elastic -E output.elasticsearch.password={{ secrets.elasticsearch.users.elastic }} --ilm-policy"
  run_once: True 
  ignore_errors: True 
  when: heartbeat_setup_ilm and not heartbeat_output_elasticsearch
  tags:
    - configuration
    - setup
    - policy

- name: Create heartbeat dashboards
  command: "docker run --rm -i -v {{ heartbeat_data_dir }}:/usr/share/heartbeat/data:rw,Z -v {{ heartbeat_config_dir }}/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro,Z -v {{ heartbeat_config_dir }}/{{ elasticsearch_certificate_ca_file_ingest }}:/usr/share/heartbeat/{{ elasticsearch_certificate_ca_file_ingest }}:ro,Z --user root {{ heartbeat_docker_image }}:{{ heartbeat_docker_tag }} setup -E setup.kibana.host={{ kibana_cluster_network_addresses[0] }}:{{ kibana_network_port }} -E setup.kibana.protocol=http -E setup.kibana.username=elastic -E setup.kibana.password={{ secrets.elasticsearch.users.elastic }} --dashboards"
  run_once: true
  when: heartbeat_setup_dashboards
  tags:
    - configuration
    - setup
    - dashboards

- name: Deploy heartbeat containers
  docker_container:
    state: started
    restart: "{{ (heartbeat_config is defined and heartbeat_config.changed) or (keystore_create is defined and keystore_create.changed) or (keystore_write is defined and keystore_write.changed) }}"
    name: "smd_infra_heartbeat"
    user: root
    image: "{{ heartbeat_docker_image }}:{{ heartbeat_docker_tag }}"
    detach: true
    restart_policy: unless-stopped
    security_opts: "{{ heartbeat_docker_security_opts }}" 
    log_driver: json-file
    log_options:
      max-size: '30m'
      max-file: '3'
    labels:
      SERVICE_TYPE: heartbeat 
      SERVICE_OWNER: infra
      SERVICE_LABEL: "{{ heartbeat_cluster_name }}" 
    volumes:
      - "{{ heartbeat_config_dir }}/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro,Z"
      - "{{ heartbeat_config_dir }}/{{ elasticsearch_certificate_ca_file_ingest }}:/usr/share/heartbeat/{{ elasticsearch_certificate_ca_file_ingest }}:ro,Z"
      - "{{ heartbeat_data_dir }}:/usr/share/heartbeat/data:rw,Z"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command: "heartbeat -e -E name={{ ansible_hostname }}"
  tags:
    - deploy
