---

- name: Create filebeat directories
  file:
    state: directory
    path: "{{ item }}"
    recurse: True
  with_items:
    - "{{ filebeat_config_dir }}"
    - "{{ filebeat_data_dir }}"
  tags:
    - configuration
    - files

- name: Copy SSL certificates
  copy:
    src: "{{ elasticsearch_certificate_local_dir|default('files/elasticsearch/certificates')}}/{{ item }}"
    dest: "{{ filebeat_config_dir }}/{{ item }}"
  with_items:
    - "{{ elasticsearch_certificate_ca_file_ingest }}"
    - "{{ elasticsearch_certificate_ca_file_monitoring }}"
  tags:
    - configuration
    - files
    - certificates

- name: Load filebeat secrets
  include_vars:
    file: "{{ lookup('env', 'PWD') }}/{{ filebeat_secrets_file|default('vault/secrets.yml')}}"
  tags:
    - configuration

- name: Get elasticsearch cluster UUID
  uri: 
    method: GET
    url_username: elastic
    url_password: "{{ secrets.elasticsearch.users.elastic }}"
    url: "{% if elasticsearch_security_http_enabled %}https{% else %}http{% endif %}://{{ elasticsearch_cluster_network_addresses[0] }}:{{ elasticsearch_network_port }}"
    remote_src: True
    return_content: True
    validate_certs: False
    force_basic_auth: True
  when: filebeat_set_cluster_uuid
  register: cluster_uuid
  
- name: Set cluster UUID variable
  set_fact:
    filebeat_cluster_uuid: "{{ cluster_uuid.json.cluster_uuid }}"
  when: filebeat_set_cluster_uuid

- name: Copy filebeat configuration
  template:
    src: filebeat.j2
    dest: "{{ filebeat_config_dir }}/filebeat.yml"
  register: filebeat_config
  tags:
    - configuration
    - files

# fatal: [0e6d6f46-206a-4a95-a93d-03b35522073c]: FAILED! => {"changed": false, "msg": "Docker SDK for Python version is 1.10.6 (micro-sdi-epg-inet-01's Python /usr/bin/python). Minimum version required is 2.1.0 to set auto_remove option. Try `pip uninstall docker-py` followed by `pip install docker`."}
# docker run -i --rm -v /var/dockershared/filebeat/data:/usr/share/filebeat/data:rw,Z --user root registry.smartdigits.io/infra/filebeat:6.8.1 keystore list
# docker run -i --rm -v /var/dockershared/filebeat/data:/usr/share/filebeat/data:rw,Z --user root registry.smartdigits.io/infra/filebeat:6.8.1 test config

- name: Create filebeat keystore
  command: "docker run --rm -i -v {{ filebeat_data_dir }}:/usr/share/filebeat/data:rw,Z --user root {{ filebeat_docker_image }}:{{ filebeat_docker_tag }} keystore create"
  args:
    creates: "{{ filebeat_data_dir }}/filebeat.keystore"
  register: keystore_create
  tags:
    - configuration
    - files
    - keystore

- name: Add filebeat keystore keys
  command: "docker run --rm -i -v {{ filebeat_data_dir }}:/usr/share/filebeat/data:rw,Z --user root {{ filebeat_docker_image }}:{{ filebeat_docker_tag }} keystore add --stdin --force {{ item.key }}"
  args:
    stdin: "{{ item.value }}"
  with_dict: "{{ secrets.filebeat }}"
  when: keystore_create.changed or filebeat_force_keystore_write
  register: keystore_write
  tags:
    - configuration
    - files
    - keystore

- name: Deploy filebeat containers
  docker_container:
    state: started
    restart: "{{ ( filebeat_config is defined and filebeat_config.changed) or (keystore_create is defined and keystore_create.changed) or (keystore_write is defined and keystore_write.changed) }}"
    name: "smd_infra_filebeat"
    user: root
    image: "{{ filebeat_docker_image }}:{{ filebeat_docker_tag }}"
    detach: true
    restart_policy: unless-stopped
    security_opts: "{{ filebeat_docker_security_opts }}"
    memory: "{{ filebeat_docker_container_memory | default( ( ansible_memtotal_mb / 8 ) | int ) }}m"
    log_driver: json-file
    log_options:
      max-size: '30m'
      max-file: '3'
    labels:
      SERVICE_TYPE: filebeat 
      SERVICE_OWNER: infra
      SERVICE_LABEL: "{{ filebeat_cluster_name }}" 
    volumes:
      - "{{ filebeat_data_dir }}:/usr/share/filebeat/data:rw,Z"
      - "{{ filebeat_config_dir }}/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro,Z"
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ filebeat_config_dir }}/{{ elasticsearch_certificate_ca_file_ingest }}:/usr/share/filebeat/{{ elasticsearch_certificate_ca_file_ingest }}:ro,Z"
      - "{{ filebeat_config_dir }}/{{ elasticsearch_certificate_ca_file_monitoring }}:/usr/share/filebeat/{{ elasticsearch_certificate_ca_file_monitoring }}:ro,Z"
    command: "filebeat -e -strict.perms=false -E name={{ ansible_hostname }}"
  tags:
    - deploy
